version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: admin-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: admin_system
      MYSQL_USER: admin
      MYSQL_PASSWORD: 123456
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/src/main/resources/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - admin-network
    command: --default-authentication-plugin=mysql_native_password

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: admin-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - admin-network
    command: redis-server --appendonly yes

  # 后端服务
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: admin-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/admin_system?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    depends_on:
      - mysql
      - redis
    networks:
      - admin-network
    volumes:
      - backend_logs:/app/logs

  # 前端服务
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: admin-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - admin-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local

networks:
  admin-network:
    driver: bridge
